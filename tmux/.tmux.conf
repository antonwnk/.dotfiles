# change prefix O;
set-option -g prefix M-b

# remap pane splits
bind | split-window -h
bind _ split-window -v
unbind '"'
unbind %

# Reload the tmux config
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf file."

# pane switching w/o mod and to vim arrows
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# pane switching w/o mod and keeping zoom
bind -n M-H select-pane -L \; resize-pane -Z
bind -n M-J select-pane -D \; resize-pane -Z
bind -n M-K select-pane -U \; resize-pane -Z
bind -n M-L select-pane -R \; resize-pane -Z

# window switching w/o prefix
bind -n M-p previous-window
bind -n M-n next-window
# disable ESC key waiting for pane-switch commands
set -s escape-time 0 

# set mouse controls for tmux
set-option -g mouse on

# set vi mode for buffer
set-window-option -g mode-keys vi

# reload tmux config file :onfig/nvim/lua/theprimeagen/test.js /bind r source-file ~/.tmux.conf

# Set pane/window numbering options
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on

# Invoking stuff in new panes
bind-key -r i run-shell "tmux neww cht.sh"


# Prettify 
set -ga terminal-overrides ",xterm-256color*:Tc"
# Prettify - status bar
set -g status-bg red
set -g status-position "bottom"
set -g pane-active-border-style "fg=black,bg=black"
set -g pane-border-style "fg=brightblack,bg=default"
set -g window-status-format "#[fg=black,bg=default](#[fg=black,bg=default]#I #F #W#[fg=black,bg=default]) "
set -g window-status-current-format "#[fg=black,bg=default]{#[fg=black,bold,bg=default]#I #F #W#[fg=black,bg=default]} "

set -g status-left-length 25
set -g status-left "#[fg=black,bold,bg=default] #S "

set -g status-right "#[fg=black,bold,bg=default]%l:%M%p" # append time
set -ga status-right "#[fg=black,none,bg=default] on #[fg=black,bold,bg=default]%a, %b %d " # append date

# Scraps
# bind -n M-H if -F '#{pane_at_left}'   '' 'select-pane -L'
# bind -n M-J if -F '#{pane_at_bottom}' '' 'select-pane -D'
# bind -n M-K if -F '#{pane_at_top}'    '' 'select-pane -U'
# bind -n M-L if -F '#{pane_at_right}'  '' 'select-pane -R'

# bind -n M-H if -F '#{pane_at_left}'   '' 'select-pane -L \; resize-pane -Z'
# bind -n M-J if -F '#{pane_at_bottom}' '' 'select-pane -D \; resize-pane -Z'
# bind -n M-K if -F '#{pane_at_top}'    '' 'select-pane -U \; resize-pane -Z'
# bind -n M-L if -F '#{pane_at_right}'  '' 'select-pane -R \; resize-pane -Z'
